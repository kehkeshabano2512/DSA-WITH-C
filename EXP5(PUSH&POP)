//Implementation of stack operations push and pop
#include<iostream>
#include<string>
using namespace std;
class stack{
	private:
		int top;
		int arr[5];
	public:
	stack()
	{//constructor
		top=-1;
		for(int i=0;i<5;i++)
		{
			arr[i]=0;
		}
		
	}
	bool isEmpty()
	{
		if(top==-1)
		    return true;
		else
		  return false;
	}
	bool isFull()
	{
		if(top==4)
		return true;
		else
		return false;
	}
	void push(int val)
	{
		if(isFull())
		{
			cout<<"Stack overflow"<<endl;
		}
		else{
			top++;
			arr[top]=val;
			
		}
	}
	int pop()
	{
		if(isEmpty())
		{
			cout<<"stack Underflow"<<endl;
			return 0;
		}
		else
		{
			int popvalue=arr[top];
			arr[top]=0;
			top--;
			return popvalue;
		}
	}
	void display()
	{
		cout<<"All values in the stack are:"<<endl;
		for(int i=4;i>=0;i--)
		{
			cout<<arr[i]<<endl;
		}
	}	
		
};
int main()
{
	stack s1;
	int option,value;
	do
	{
		cout<<"what operation do you want to perform"<<endl;
		cout<<"1. push"<<endl;
		cout<<"2. pop"<<endl;
		cout<<"3. isEmpty"<<endl;
		cout<<"4. isFull"<<endl;
		cout<<"5. display"<<endl;
		cout<<"6. Screen clean"<<endl;
		cin>>option;
		switch(option){
			case 1:
				cout<<"Enter an item to push in the stack"<<endl;
				cin>>value;
				s1.push(value);
				break;
			case 2:
				cout<<"Pop function called:"<<s1.pop()<<endl;
				break;
			case 3:
			   if(s1.isEmpty())
			    cout<<"stack is empty:"<<endl;
			   else
			    cout<<"stack is not empty:"<<endl;
		     	break;
		    case 4: 
			      if(s1.isFull())
			         cout<<"stack is Full:"<<endl;
			      else
			        cout<<"stack is not Full:"<<endl;
		     	break;	
		    case 5:
			cout<<"Display Stack:-"<<endl;
			s1.display();
			break;
			 case 6:
			 	system("cls");
			 	break;
			
			default:
			 cout<<"Enter proper option:"<<endl; 	
			   	
		}
		
		
		
	}while(option!=0);
	
	return 0;
}
