//write a program in c++ for the graph traversal using DFS.
#include <iostream>
using namespace std;

int graph[5][5];     // Adjacency matrix for 5 nodes
bool visited[5];     // Visited array

// DFS function using recursion
void dfs(int node) {
    cout << node << " ";      // Print the node
    visited[node] = true;     // Mark as visited

    // Visit all neighbors of the current node
    for (int i = 0; i < 5; i++) {
        if (graph[node][i] == 1 && !visited[i]) {
            dfs(i);  // Recursive call
        }
    }
}

int main() {
    // Create a graph with 5 nodes (0 to 4)
    // Add edges (undirected)
    graph[0][1] = graph[1][0] = 1;
    graph[0][2] = graph[2][0] = 1;
    graph[1][3] = graph[3][1] = 1;
    graph[2][4] = graph[4][2] = 1;

    // Mark all nodes as not visited
    for (int i = 0; i < 5; i++)
        visited[i] = false;

    cout << "DFS Traversal starting from node 0: ";
    dfs(0);  // Start DFS from node 0

    return 0;
}
